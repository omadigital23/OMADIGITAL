# üîê OMADIGITAL - ENVIRONMENT VARIABLES
# Copy this file to .env.local and fill in your actual values
# Documentation: API_CREDENTIALS_USAGE.md

# ============================================================
# 1. SUPABASE DATABASE (REQUIRED)
# ============================================================

# Public URL - Safe to expose client-side
NEXT_PUBLIC_SUPABASE_URL=your_supabase_project_url

# Public Anon Key - Safe to expose client-side
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key

# Service Role Key - SERVER-SIDE ONLY (API routes)
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# ============================================================
# 2. GOOGLE VERTEX AI (REQUIRED - 100% Vertex AI Only)
# ============================================================

# ‚ö†Ô∏è PROJECT POLICY: Use ONLY Vertex AI
# ‚ùå NO Google AI Studio (AI Studio Gemini)
# ‚ùå NO Hugging Face
# ‚ùå NO local language detection/response heuristics

# Service Account JSON file path (must be in .gitignore)
GOOGLE_APPLICATION_CREDENTIALS=./vertex-ai-credentials.json

# Google Cloud Project ID
GOOGLE_CLOUD_PROJECT=your_gcp_project_id

# Vertex AI Region
GOOGLE_CLOUD_LOCATION=us-central1

# Vertex AI Model
VERTEX_AI_MODEL=gemini-1.5-pro

# Vertex AI Endpoint
VERTEX_AI_ENDPOINT=us-central1-aiplatform.googleapis.com

# ============================================================
# 3. ADMIN AUTHENTICATION (REQUIRED)
# ============================================================

# Admin username
ADMIN_USERNAME=your_admin_username

# Admin password hash (use generate-admin-credentials.js)
ADMIN_PASSWORD_HASH=your_admin_password_hash

# Admin salt (use generate-admin-credentials.js)
ADMIN_SALT=your_admin_salt

# JWT Secret for session encryption (generate with: openssl rand -hex 32)
JWT_SECRET=your_jwt_secret_32_chars_minimum

# ============================================================
# 4. ENVIRONMENT CONFIGURATION
# ============================================================

# Node environment
NODE_ENV=development

# App environment
NEXT_PUBLIC_APP_ENV=development

# Base URL
NEXT_PUBLIC_BASE_URL=http://localhost:3000

# ============================================================
# 5. OPTIONAL: ANALYTICS & MONITORING
# ============================================================

# Google Analytics (optional)
NEXT_PUBLIC_GA_ID=

# Performance monitoring
NEXT_PUBLIC_PERFORMANCE_MONITORING=true
NEXT_PUBLIC_SECURITY_LEVEL=high
NEXT_PUBLIC_MONITORING_ENDPOINT=/api/analytics/web-vitals

# ============================================================
# 6. OPTIONAL: CRON & AUTOMATION
# ============================================================

# Cron job authentication token
CRON_AUTH_TOKEN=your_cron_auth_token

# ------------------------------
# 5. SECURITY NOTES
# ------------------------------

# ‚ùå NEVER expose these in client-side code:
#    - SUPABASE_SERVICE_ROLE_KEY
#    - JWT_SECRET
#    - ADMIN_PASSWORD_HASH
#    - CRON_AUTH_TOKEN
#    - vertex-ai-credentials.json contents
#    - GOOGLE_APPLICATION_CREDENTIALS path or contents
#
# ‚úÖ Only NEXT_PUBLIC_* variables are exposed to the browser
# ‚úÖ All other variables are server-side only (API routes, getServerSideProps)
# ‚úÖ Use Vercel Environment Variables for production deployment
# ‚úÖ Rotate credentials regularly and after any suspected breach
# ‚úÖ Never commit .env.local or vertex-ai-credentials.json to git
#
# For production deployment on Vercel:
# 1. Add all non-NEXT_PUBLIC_ variables as Vercel Environment Variables
# 2. Upload vertex-ai-credentials.json content as GOOGLE_APPLICATION_CREDENTIALS_JSON
# 3. Set NODE_ENV=production
# 4. Enable "Automatically expose System Environment Variables"