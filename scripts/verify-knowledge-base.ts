/**
 * Script de v√©rification de la base de connaissances Supabase
 * V√©rifie que toutes les donn√©es sont bien charg√©es
 */

import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || '';
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';

async function verifyKnowledgeBase() {
  console.log('üîç V√©rification de la base de connaissances...\n');

  const supabase = createClient(supabaseUrl, supabaseKey);

  // 1. V√©rifier la table existe
  const { data: allData, error: allError } = await supabase
    .from('knowledge_base')
    .select('*')
    .eq('is_active', true);

  if (allError) {
    console.error('‚ùå Erreur acc√®s table knowledge_base:', allError.message);
    console.log('\n‚ö†Ô∏è  ACTION REQUISE: Ex√©cutez les migrations Supabase:');
    console.log('   1. Allez dans Supabase Dashboard ‚Üí SQL Editor');
    console.log('   2. Ex√©cutez: supabase/migration_script.sql');
    console.log('   3. Puis: supabase/migrations/20250903000001_chatbot_knowledge_base_data.sql\n');
    return;
  }

  console.log(`‚úÖ Table knowledge_base accessible`);
  console.log(`üìä Total documents: ${allData?.length || 0}\n`);

  // 2. V√©rifier par langue
  const { data: frData } = await supabase
    .from('knowledge_base')
    .select('*')
    .eq('language', 'fr')
    .eq('is_active', true);

  const { data: enData } = await supabase
    .from('knowledge_base')
    .select('*')
    .eq('language', 'en')
    .eq('is_active', true);

  console.log(`üá´üá∑ Documents fran√ßais: ${frData?.length || 0}`);
  console.log(`üá¨üáß Documents anglais: ${enData?.length || 0}\n`);

  // 3. V√©rifier par cat√©gorie
  const categories = ['contact', 'services', 'pricing', 'faq', 'use_cases', 'technical'];
  
  console.log('üìÇ Documents par cat√©gorie:');
  for (const category of categories) {
    const { data: catData } = await supabase
      .from('knowledge_base')
      .select('*')
      .eq('category', category)
      .eq('is_active', true);
    
    console.log(`   ${category.padEnd(15)}: ${catData?.length || 0} documents`);
  }

  // 4. V√©rifier informations de contact sp√©cifiquement
  console.log('\nüìû V√©rification informations de contact:');
  const { data: contactData } = await supabase
    .from('knowledge_base')
    .select('*')
    .eq('category', 'contact')
    .eq('is_active', true);

  if (contactData && contactData.length > 0) {
    contactData.forEach((doc: any) => {
      console.log(`   ‚úÖ ${doc.language.toUpperCase()}: ${doc.title}`);
      const hasPhone = doc.content.includes('+212 701 193 811');
      const hasEmail = doc.content.includes('omadigital23@gmail.com');
      console.log(`      T√©l√©phone: ${hasPhone ? '‚úÖ' : '‚ùå'} +212 701 193 811`);
      console.log(`      Email: ${hasEmail ? '‚úÖ' : '‚ùå'} omadigital23@gmail.com`);
    });
  } else {
    console.log('   ‚ùå AUCUNE information de contact trouv√©e!');
    console.log('   ‚ö†Ô∏è  Ex√©cutez: supabase/migrations/20250903000001_chatbot_knowledge_base_data.sql');
  }

  // 5. Test de recherche
  console.log('\nüîç Test de recherche RAG:');
  const testQueries = [
    { query: 't√©l√©phone', expected: 'contact' },
    { query: 'prix', expected: 'pricing' },
    { query: 'whatsapp', expected: 'services' }
  ];

  for (const test of testQueries) {
    const { data: searchData } = await supabase
      .from('knowledge_base')
      .select('*')
      .eq('language', 'fr')
      .textSearch('content', test.query)
      .limit(1);

    const found = searchData && searchData.length > 0;
    console.log(`   "${test.query}": ${found ? '‚úÖ' : '‚ùå'} ${found ? searchData[0].category : 'non trouv√©'}`);
  }

  console.log('\n‚úÖ V√©rification termin√©e!\n');
}

verifyKnowledgeBase().catch(console.error);
